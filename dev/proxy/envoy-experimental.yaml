admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    # Redirects all traffic coming from port 80 to port 443 for SSL
  - name: http_to_https_redirect
    address:
      socket_address: { address: 0.0.0.0, port_value: 80 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          use_remote_address: true
          xff_num_trusted_hops: 0
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: 
                - "*"
              routes:
              - match: { prefix: "/"}
                redirect:
                  port_redirect: 443
                  https_redirect: true
          http_filters:
          - name: envoy.filters.http.router

    # HTTPS Gateway for the frontend server
  - name: https_server_gateway
    address:
      socket_address: { address: 0.0.0.0, port_value: 443 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          use_remote_address: true
          xff_num_trusted_hops: 0
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: 
                # Replace domain with your domain
                - "www.xini.no"
              routes:
              - match: { prefix: "/"}
                route:
                  cluster: web_service
              - match: {prefix: "/auth/github/callback"}
                route: { cluster: web_service }
              cors:
                allow_origin_string_match:
                  - prefix: "*"
                allow_headers: access-control-allow-origin
          http_filters:
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.router
          http_protocol_options: { accept_http_10: true}
      transport_socket:
        name: envoy.transport_socket.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          sni: www.xini.no
          common_tls_context:
            # Replace certificate with your certificates
            tls_certificates:
              certificate_chain:
                filename: /etc/letsencrypt/live/www.xini.no/fullchain.pem
              private_key:
                filename: /etc/letsencrypt/live/www.xini.no/privkey.pem


    # Gateway for the AutograderService gRPC server
  - name: grpc_gateway
    address:
      # Replace 8080 with whichever port you want to be routed to the gRPC server
      socket_address: { address: 0.0.0.0, port_value: 8080 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: grpc_service
                  max_stream_duration:
                    grpc_timeout_header_max: 0s
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: access-control-allow-origin,user,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.grpc_web
          
          - name: envoy.filters.http.router
          http_protocol_options: { accept_http_10: true}
      # Experimenting with making service available from the outside
      #transport_socket:
      #  name: envoy.transport_socket.tls
      #  typed_config:
      #    "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
      #    common_tls_context:
      #      tls_certificates:
      #        certificate_chain:
      #          filename: /etc/letsencrypt/live/www.xini.no/fullchain.pem
      #        private_key:
      #          filename: /etc/letsencrypt/live/www.xini.no/privkey.pem
  clusters:
  - name: grpc_service
    connect_timeout: 15s
    type: logical_dns
    http2_protocol_options: {}
    upstream_connection_options: { tcp_keepalive: { keepalive_time: 300 }}
    lb_policy: round_robin
    load_assignment:
      cluster_name: cluster_0
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: localhost
                    # Replace this port with the gRPC server listening port (grpc.addr)
                    port_value: 9090
  - name: web_service
    connect_timeout: 15s
    type: strict_dns
    dns_lookup_family: v4_only
    lb_policy: round_robin
    load_assignment:
      cluster_name: cluster_1
      endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: localhost
                  # Change this to the http.addr you use
                  port_value: 3333